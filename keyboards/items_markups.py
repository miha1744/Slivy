from ast import Call
from datetime import datetime
from unicodedata import category

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.dispatcher.filters.callback_data import CallbackData
from db.db import Database
from db.objects import Item, SpecialCourse

db = Database()


subjects = {"1": "–†–£–°–°–ö–ò–ô –Ø–ó–´–öüñåÔ∏è",
            "2": "–ü–†–û–§üßÆ",
            "3": "–ë–ê–ó–êüìê",
            "4": "–§–ò–ó–ò–ö–êüî≠",
            "5": "–û–ë–©–ï–°–¢–í–û–ó–ù–ê–ù–ò–ï‚öñÔ∏è",
            "6": "–ò–°–¢–û–†–ò–ØüèõÔ∏è",
            "7": "–ë–ò–û–õ–û–ì–ò–Øüß¨",
            "8": "–•–ò–ú–ò–Øüß™",
            "9": "–õ–ò–¢–ï–†–ê–¢–£–†–êüìö",
            "10": "–ê–ù–ì–õ–ò–ô–°–ö–ò–ô –Ø–ó–´–öüñç",
            "11": "–ò–ù–§–û–†–ú–ê–¢–ò–ö–êüñ•",
            "12": "–ì–ï–û–ì–†–ê–§–ò–Øüó∫Ô∏è"}

subjects_oge = {"1": "–†–£–°–°–ö–ò–ô –Ø–ó–´–öüñåÔ∏è",
                "15": "–ú–ê–¢–ï–ú–ê–¢–ò–ö–êüìê",
                "5": "–û–ë–©–ï–°–¢–í–û–ó–ù–ê–ù–ò–ï‚öñÔ∏è",
                "7": "–ë–ò–û–õ–û–ì–ò–Øüß¨",
                "8": "–•–ò–ú–ò–Øüß™",
                "10": "–ê–ù–ì–õ–ò–ô–°–ö–ò–ô –Ø–ó–´–öüñç"}

subjects_flash = {"1": "–†–£–°–°–ö–ò–ô –Ø–ó–´–öüñåÔ∏è",
                "15": "–ú–ê–¢–ï–ú–ê–¢–ò–ö–êüìê",
                "8": "–•–ò–ú–ò–Øüß™",
                "10": "–ê–ù–ì–õ–ò–ô–°–ö–ò–ô –Ø–ó–´–öüñç"}

categories = {
                # "1": "–°–µ–Ω—Ç—è–±—Ä—å",
              # "2": "–û–∫—Ç—è–±—Ä—å",
              # "3": "–ù–æ—è–±—Ä—å",
              "9": "–î–µ–∫–∞–±—Ä—å",
              "8": "–Ø–Ω–≤–∞—Ä—å",
              "7": "–§–µ–≤—Ä–∞–ª—å",
              "6": "–ú–∞—Ä—Ç",
              "5": "–ê–ø—Ä–µ–ª—å"
              # "4": "–ú–∞–π"
              }

subcategories = {"1": "–ï–ì–≠",
                 "2": "–û–ì–≠"}

subcategories_january = {
    "5": "–ì–æ–¥–æ–≤—ã–µ –ï–ì–≠",
    "4": "–ü–æ–ª—É–≥–æ–¥–æ–≤—ã–µ –ï–ì–≠",
    "2": "–û–ì–≠"
}

subcategories_february = {
    "1": "–ï–ì–≠",
    "7": "–ù–ï–û –£–ú–°–ö–£–õ",
    "2": "–û–ì–≠"
}

all_subjects = {"1": "–†–£–°–°–ö–ò–ô –Ø–ó–´–öüñåÔ∏è",
            "2": "–ü–†–û–§üßÆ",
            "3": "–ë–ê–ó–êüìê",
            "4": "–§–ò–ó–ò–ö–êüî≠",
            "5": "–û–ë–©–ï–°–¢–í–û–ó–ù–ê–ù–ò–ï‚öñÔ∏è",
            "6": "–ò–°–¢–û–†–ò–ØüèõÔ∏è",
            "7": "–ë–ò–û–õ–û–ì–ò–Øüß¨",
            "8": "–•–ò–ú–ò–Øüß™",
            "9": "–õ–ò–¢–ï–†–ê–¢–£–†–êüìö",
            "10": "–ê–ù–ì–õ–ò–ô–°–ö–ò–ô –Ø–ó–´–öüñç",
            "11": "–ò–ù–§–û–†–ú–ê–¢–ò–ö–êüñ•",
            "12": "–ì–ï–û–ì–†–ê–§–ò–Øüó∫Ô∏è",
            "15": "–ú–ê–¢–ï–ú–ê–¢–ò–ö–êüìê"
}


class buy_item_cd(CallbackData, prefix="buy_item"):
    user_id: int
    item_id: int
    price: int


class menu_cd(CallbackData, prefix="Menu"):
    lvl: int # level
    p: int # precategory
    c: int # category
    s: int # subcategory
    j: int # subject
    i:int # item


def make_callback_data(level=1, precategory=0, category=0, subcategory=0, subject=0,  item=0):
    return menu_cd(lvl=level, p=precategory, c=category, s=subcategory, j=subject, i=item)


async def precategory_keyboard(admin=False):
    CURRENT_LEVEL = 0

    markup = [[
        InlineKeyboardButton(text='–ö—É—Ä—Å—ã –∑–∞ 2022-2023', callback_data=make_callback_data(level=CURRENT_LEVEL + 1, precategory=2).pack()),
        InlineKeyboardButton(text='–ö—É—Ä—Å—ã –∑–∞ 2021-2022', callback_data=make_callback_data(level=CURRENT_LEVEL + 1, precategory=1).pack())
    ]]

    # if admin:
    markup.append([InlineKeyboardButton(text='–ö—É—Ä–∞—Ç–æ—Ä—ã', callback_data=f"sp_cat_10")])

    markup.append([InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—åüö´", callback_data=make_callback_data(level=CURRENT_LEVEL - 1).pack())])

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=markup
    )

    return keyboard


async def category_keyboard(precategory, admin=False):
    CURRENT_LEVEL = 1
    markup = []

    k = 0
    temp = []
    
    categories = [i[1] for i in sorted([(i.id, i) for i in db.get_categories(precategory)], key=lambda x: x[0])]

    for i in categories:
        category_id, category_name = i.id, i.name
        callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=int(precategory), category=category_id)

        if category_id == 10 or category_id == 11:
            continue
        
        k += 1
        temp.append(
            InlineKeyboardButton(text=str(category_name), callback_data=callback_data.pack())
        )

        if k % 3 == 0:
            markup.append(temp)
            temp = []


    if temp:
        markup.append(temp)

    if precategory == 1:
        callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=11)
        markup.append([
            InlineKeyboardButton(text="–ü–†–ï–î–ë–ê–ù–ù–ò–ö", callback_data=callback_data.pack())
        ])

    markup.append([
        InlineKeyboardButton(text="–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã", callback_data=f"specials_{precategory}")
    ])
    
    if admin:
        markup.append([InlineKeyboardButton(text="$ –°–æ–∑–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é $", callback_data=f"create_category_{precategory}")])
        markup.append([InlineKeyboardButton(text="$ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É $", callback_data="edit_main_image")])
        markup.append([InlineKeyboardButton(text="$ –£–¥–∞–ª–∏—Ç—å –≥–ª–∞–≤–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É $", callback_data="del_main_image")])

    markup.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=make_callback_data(level=CURRENT_LEVEL - 1).pack())])
        
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=markup
    )

    return keyboard


async def subcategory_keyboard(precategory, category, admin=False):
    CURRENT_LEVEL = 2
    markup = []

    if category == 5:
        markup.append([
            InlineKeyboardButton(text="–ì–æ–¥–æ–≤—ã–µ –ï–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="5").pack())
        ])
        
        markup.append([
            InlineKeyboardButton(text="–ü–æ–ª—É–≥–æ–¥–æ–≤—ã–µ –ï–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="168").pack())
        ])
        
        markup.append([
            InlineKeyboardButton(text="–û–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="2").pack())
        ])

    elif category == 81:
        markup.append([
            InlineKeyboardButton(text="–ì–æ–¥–æ–≤—ã–µ –ï–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="5").pack())
        ])
        
        markup.append([
            InlineKeyboardButton(text="–ü–æ–ª—É–≥–æ–¥–æ–≤—ã–µ –ï–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="168").pack())
        ])
        
        markup.append([
            InlineKeyboardButton(text="–û–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="2").pack())
        ])

    elif category == 82:
        markup.append([
            InlineKeyboardButton(text="–ì–æ–¥–æ–≤—ã–µ –ï–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="5").pack())
        ])
        
        markup.append([
            InlineKeyboardButton(text="–ü–æ–ª—É–≥–æ–¥–æ–≤—ã–µ –ï–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="168").pack())
        ])
        
        markup.append([
            InlineKeyboardButton(text="–û–ì–≠", callback_data=make_callback_data(level=CURRENT_LEVEL + 1,
                                                                                      precategory=precategory,
                                                                                      category=category,
                                                                                      subcategory="2").pack())
        ])

    else:
        for i in db.get_subcategories(precategory, category):
            subcategory_id, subcategory_name = i.id, i.name
            if subcategory_id in [5, 168]:
                continue
            callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory_id)

            markup.append(
                [InlineKeyboardButton(text=subcategory_name, callback_data=callback_data.pack())]
            )

    if admin:
        markup.append([
            InlineKeyboardButton(text="$ –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É $",
                                callback_data=f"add_category_photo_{category}")
       ])


        markup.append([
            InlineKeyboardButton(text="$ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ $",
                                callback_data=f"rename_category_{category}")
       ])

        markup.append([
            InlineKeyboardButton(text="$ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é $", callback_data=f"get_link_ctg_{category}")
        ])


        markup.append([
            InlineKeyboardButton(text="$ –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é $",
                                callback_data=f"del_category_{category}")
        ])

    if category == 10:
        markup.append(
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                                callback_data=f"specials_{precategory}")]
    )
    else:
        markup.append(
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                                callback_data=make_callback_data(level=CURRENT_LEVEL - 1, precategory=precategory, category=category).pack())]
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=markup
    )

    return keyboard


async def subject_keyboard(precategory, category, subcategory, admin=False):
    CURRENT_LEVEL = 3
    markup = []
    global subjects_oge

    if subcategory == 2 and category == 10:
        global subjects_flash
        for subject_id, subject_name in subjects_flash.items():
            if subject_name == "–ê–ù–ì–õ–ò–ô–°–ö–ò–ô –Ø–ó–´–öüìì":
                callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory,
                                                   subject=subject_id)

                markup.append([
                    InlineKeyboardButton(text=subject_name, callback_data=callback_data.pack())
                ])
    elif category == 13 and precategory == 2 and (subcategory == 2 or subcategory == 8):
        for subject_id, subject_name in subjects_oge.items():
            callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory,
                                               subject=subject_id)

            markup.append([
                InlineKeyboardButton(text=subject_name, callback_data=callback_data.pack())
            ])
        callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory,
                                            subject=10)

        markup.append([
                InlineKeyboardButton(text="–ê–ù–ì–õ–ò–ô–°–ö–ò–ô –Ø–ó–´–öüìì", callback_data=callback_data.pack())
            ])
    elif subcategory == 2 or subcategory == 8:
        for subject_id, subject_name in subjects_oge.items():
            if (subject_name == "–•–ò–ú–ò–Øüß™" and category in [9]) or (category == 11 and subcategory == 2 and subject_id == 5) or (category == 15 and subject_id == 8):
                continue
            else:
                callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory,
                                                   subject=subject_id)

                markup.append([
                    InlineKeyboardButton(text=subject_name, callback_data=callback_data.pack())
                ])
        if category == 11:
            callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory,
                                                subject=5)

            markup.append([
                    InlineKeyboardButton(text="–û–ë–©–ï–°–¢–í–û–ó–ù–ê–ù–ò–ïüìí", callback_data=callback_data.pack())
                ])
        if category == 14 and subcategory == 2:
            callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory,
                                                   subject=10)

            markup.append([
                InlineKeyboardButton(text="–ê–ù–ì–õ–ò–ô–°–ö–ò–ô –Ø–ó–´–öüìì", callback_data=callback_data.pack())
            ])


    else:
        global subjects
        for subject_id, subject_name in subjects.items():
            if (category == 1 and subcategory == 1 and subject_id == 12):
                continue
            callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory,
                                               subject=int(subject_id))

            markup.append([
                InlineKeyboardButton(text=subject_name, callback_data=callback_data.pack())
            ])

    if admin:
        markup.append([
            InlineKeyboardButton(text="$ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é $", callback_data=f"get_link_sub_{category}-{subcategory}")
        ])

    markup.append([
        InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                             callback_data=make_callback_data(level=CURRENT_LEVEL - 1, precategory=precategory, category=category,
                                                              subcategory=subcategory).pack())
    ])
    return InlineKeyboardMarkup(inline_keyboard=markup)


async def items_keyboard(precategory, category, subcategory, subject, admin=False):
    CURRENT_LEVEL = 4
    markup = []

    # items = [i[1] for i in sorted([(i.id, i) for i in db.get_items(precategory, category, subcategory, subject)], key=lambda x: x[0])]
    items = []
    for i in sorted([(i.id, i) for i in db.get_items(precategory, category, subcategory, subject)], key=lambda x: x[0]):
        if not("–≤–µ–±–∏—É–º" in i[1].name.lower()):
            items.append(i[1])
        else:
            items.insert(1, i[1])


    if not items and not admin:
        return False

    for item in items:
        callback_data = make_callback_data(level=CURRENT_LEVEL + 1, precategory=precategory, category=category, subcategory=subcategory, subject=subject, item=item.id)
        markup.append([
            InlineKeyboardButton(text=f'{item.name}', callback_data=callback_data.pack())
        ])
    

    if admin:
        markup.append([
            InlineKeyboardButton(text="$ –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä $", callback_data=f"add_item_{precategory}:{category}:{subcategory}:{subject}")
        ])

        markup.append([
            InlineKeyboardButton(text="$ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç $", callback_data=f"get_link_sj_{category}-{subcategory}-{subject}")
        ])


    if subject == '14':
        markup.append([
        InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è", callback_data=make_callback_data(
            level=CURRENT_LEVEL - 2, precategory=precategory, category=str(category), subcategory=str(subcategory)).pack())
        ])
    else:
        markup.append([
        InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è", callback_data=make_callback_data(
            level=CURRENT_LEVEL - 1, precategory=precategory, category=str(category), subcategory=str(subcategory)).pack())
        ])

        markup.append([
                InlineKeyboardButton(text=f'–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–ºüö´', callback_data="menu")
            ])
    


    return InlineKeyboardMarkup(inline_keyboard=markup)


def item_keyboard(item, user_id, admin=False):
    CURRENT_LEVEL = 5
    markup = []

    ids, price = item.id, item.price
    if not isinstance(item, Item):
        ids = -ids
    callback_data = buy_item_cd(user_id=user_id, item_id=ids, price=price)

    markup.append([
        InlineKeyboardButton(text=f'–ö—É–ø–∏—Ç—å', callback_data=callback_data.pack())
    ])

    if admin:
        markup.append(
                [InlineKeyboardButton(text=f'$ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å $', callback_data=f"edit_item_{ids}")]
        )

    if isinstance(item, Item):
        markup.append([
            InlineKeyboardButton(text=f'–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è', callback_data=make_callback_data(
                level=CURRENT_LEVEL - 1, precategory=item.precategory, category=item.category, subcategory=item.subcategory, subject=item.subject).pack())
        ])
    else:
        markup.append([
            InlineKeyboardButton(text=f'–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è', callback_data=f"sp_cat_{item.category_name}")
        ])

    markup.append(
            [InlineKeyboardButton(text=f'–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–ºüö´', callback_data="menu")]
        )

    return InlineKeyboardMarkup(inline_keyboard=markup)



async def specials_keyboard(admin=False, precategory=1):
    markup = []

    if precategory == 1:

        callback_data = make_callback_data(level=2, precategory=1, category=10)

        markup.append([
            InlineKeyboardButton(text="–§–õ–≠–® –£–ú–°–ö–£–õ (45 –î–ù–ï–ô)", callback_data=callback_data.pack())
        ])

        specials = [(1, "–†—É–ª–µ—Ç–∫–∏ –£–º—Å–∫—É–ª"), (2, "–ü–û–¢–ù–´–ô –ú–ê–†–ê–§–û–ù (90 –¥–Ω–µ–π)"), (3, "–§–õ–≠–® –£–ú–°–ö–£–õ (45 –î–ù–ï–ô)"), (6, "–í–ï–ë–ò–£–ú –ü–†–û–ö–ê–ß–ö–ê (45 –î–ù–ï–ô)")]

        for category_id, category_name in specials:
            if category_id == 3 or category_id == 7:
                continue

            markup.append([
                InlineKeyboardButton(text=category_name, callback_data=f"sp_cat_{category_id}")
            ])

        if admin:
            markup.append([
                    InlineKeyboardButton(text="$ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –°–ø–µ—Ü. –∫–∞—Ç–µ–≥–æ—Ä–∏—é $", callback_data=f"get_link_spctg_{precategory}")
                ])

        markup.append([
            InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                callback_data=make_callback_data(level=1, precategory=1).pack())
                    ])
    else:
        markup.append([
                InlineKeyboardButton(text="üíØ 100–ë–∞–ª—å–Ω—ã–π", callback_data=f"sp_cat_9")
            ])

        for i in db.get_special_courses():
            category_id, category_name = i.id, i.name
            if category_id in [1, 2, 3, 4, 5, 6, 9, 10]:
                continue

            markup.append([
                InlineKeyboardButton(text=category_name, callback_data=f"sp_cat_{category_id}")
            ])

        if admin:
            markup.append([
                InlineKeyboardButton(text="$ –î–æ–±–∞–≤–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é $", callback_data="create_speacial")
            ])

            markup.append([
                    InlineKeyboardButton(text="$ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –°–ø–µ—Ü. –∫–∞—Ç–µ–≥–æ—Ä–∏—é $", callback_data=f"get_link_spctg_{precategory}")
                ])

        markup.append([
            InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                                callback_data=make_callback_data(level=1, precategory=2).pack())
        ])

    return InlineKeyboardMarkup(inline_keyboard=markup)


async def special_items_keyboard(sp_ids, admin=False):
    markup = []

    for i in db.get_special_items(int(sp_ids)):

        ids, name, price = i.id, i.name, i.price
        # markup.append(
        #     InlineKeyboardButton(text=f"{name} | {price}", callback_data=f"sp_itm_{ids}")
        # )
        if ids in [61, 70]:
            markup.insert(0, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        elif ids in [62, 50]:
            markup.insert(1, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        elif ids in [63, 51]:
            markup.insert(2, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        elif ids in [64, 52]:
            markup.insert(3, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        elif ids in [65, 71]:
            markup.insert(4, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        elif ids == 66:
            markup.insert(5, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        elif ids == 67:
            markup.insert(6, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        elif ids == 68:
            markup.insert(7, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        elif ids == 69:
            markup.insert(8, [
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])
        else:
            markup.append([
                InlineKeyboardButton(text=f"{name}", callback_data=f"sp_itm_{ids}")
            ])

    if admin:
        markup.append([
            InlineKeyboardButton(text="$ –î–æ–±–∞–≤–∏—Ç—å –∫—É—Ä—Å $", callback_data=f"add_item_-{sp_ids}")
        ])
        
        markup.append([
            InlineKeyboardButton(text="$ –î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ $", callback_data=f"add_special_course_image_{sp_ids}")
        ])

        markup.append([
                InlineKeyboardButton(text="$ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ $", callback_data=f"rename_special_{sp_ids}")
            ])

        markup.append([
                    InlineKeyboardButton(text="$ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –°–ø–µ—Ü. –∫—É—Ä—Å $", callback_data=f"get_link_spsub_{sp_ids}")
                ])

        markup.append([
            InlineKeyboardButton(text="$ –£–¥–∞–ª–∏—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é $", callback_data=f"del_sp_{sp_ids}")
        ])

    if int(sp_ids)  in [1, 2, 3, 4, 5, 6]:
        precategory = 1
    else:
        precategory = 2


    if int(sp_ids) == 10:
        markup.append([
                    InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                                         callback_data=make_callback_data(level=0).pack())
                ])
    elif int(sp_ids) in [4]:
        markup.append([
        InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                             callback_data=make_callback_data(level=2, precategory=1, category=5).pack())
    ])
    elif int(sp_ids) in [5]:
        markup.append([
        InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                             callback_data=make_callback_data(level=2, precategory=2, category=81).pack())
    ])
    else:
        markup.append([
            InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                                 callback_data=f"specials_{precategory}")
        ])

    return InlineKeyboardMarkup(inline_keyboard=markup)


async def halfyear_courses_keyboard(precategory=4):
    CURRENT_LEVEL = 3
    markup = []
    courses = db.get_special_items(precategory)
    for i in courses:
        ids, name, price = i.id, i.name, i.price
        # markup.row(InlineKeyboardButton(text=f'{name} | {price}‚ÇΩ', callback_data=f"halfyear_course_{ids}"))
        markup.append([InlineKeyboardButton(text=f'{name}', callback_data=f"sp_itm_{ids}")])
    markup.append(
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è‚óÄÔ∏è",
                                     callback_data=make_callback_data(level=CURRENT_LEVEL - 1, category="5" if precategory == 4 else 81).pack())]
    )



    return InlineKeyboardMarkup(inline_keyboard=markup)
